<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jyw.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.jyw.entity.Product">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="info" property="info" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
        <result column="img" property="img" jdbcType="VARCHAR"/>
        <result column="selling_price" property="sellingPrice" jdbcType="INTEGER"/>
        <result column="sales" property="sales" jdbcType="INTEGER"/>
        <result column="max_num" property="maxNum" jdbcType="INTEGER"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="hot" property="hot" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, product_id, product_name, category_id, title, info, price, img, selling_price, 
    sales, max_num, version, hot
  </sql>
    <select  id="selectByExample" resultMap="BaseResultMap" parameterType="com.jyw.entity.ProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.jyw.entity.ProductExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jyw.entity.Product">
    insert into product (id, product_id, product_name, 
      category_id, title, info, 
      price, img, selling_price, 
      sales, max_num, version, 
      hot)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{sellingPrice,jdbcType=INTEGER}, 
      #{sales,jdbcType=INTEGER}, #{maxNum,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{hot,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.jyw.entity.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="info != null">
                info,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="sellingPrice != null">
                selling_price,
            </if>
            <if test="sales != null">
                sales,
            </if>
            <if test="maxNum != null">
                max_num,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="hot != null">
                hot,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                #{info,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="sellingPrice != null">
                #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                #{sales,jdbcType=INTEGER},
            </if>
            <if test="maxNum != null">
                #{maxNum,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="hot != null">
                #{hot,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.info != null">
                info = #{record.info,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=INTEGER},
            </if>
            <if test="record.img != null">
                img = #{record.img,jdbcType=VARCHAR},
            </if>
            <if test="record.sellingPrice != null">
                selling_price = #{record.sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="record.sales != null">
                sales = #{record.sales,jdbcType=INTEGER},
            </if>
            <if test="record.maxNum != null">
                max_num = #{record.maxNum,jdbcType=INTEGER},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=INTEGER},
            </if>
            <if test="record.hot != null">
                hot = #{record.hot,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set id = #{record.id,jdbcType=INTEGER},
        product_id = #{record.productId,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        info = #{record.info,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=INTEGER},
        img = #{record.img,jdbcType=VARCHAR},
        selling_price = #{record.sellingPrice,jdbcType=INTEGER},
        sales = #{record.sales,jdbcType=INTEGER},
        max_num = #{record.maxNum,jdbcType=INTEGER},
        version = #{record.version,jdbcType=INTEGER},
        hot = #{record.hot,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jyw.entity.Product">
        update product
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="sellingPrice != null">
                selling_price = #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                sales = #{sales,jdbcType=INTEGER},
            </if>
            <if test="maxNum != null">
                max_num = #{maxNum,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="hot != null">
                hot = #{hot,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jyw.entity.Product">
    update product
    set product_id = #{productId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      selling_price = #{sellingPrice,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateSalesByVersion" parameterType="com.jyw.entity.Product">
    update product
    set sales = #{sales,jdbcType=INTEGER},
     version = version + 1
    where product_id = #{productId,jdbcType=INTEGER}
     and version = #{version,jdbcType=INTEGER}
  </update>
</mapper>